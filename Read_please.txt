จากที่ทำในข้อนี้ มีในบางกรณีที่ทำให้โค้ดนั้นไม่สามารถให้คำตอบตรงกับจุดประสงค์หรือตามหลักของคณิตศาสตร์ได้ ผมจึงได้เพิ่มโค้ดเพื่อทำให้โปรแกรมสามารถรันได้ตามปกติดังนี้

1.เมื่อ y เป็นลบ ใน mode : price
	ในกรณีนี้เมื่อผู้ใช้รันโปรแกรมออกมา จะได้ค่ารูทติดลบ และโปรแกรมจะคำนวณค่า t2 เป็น NaN ซึ่งตามหลักคณิตศาสตร์แล้วจะเป็นเซตว่าง (ไม่มีคำตอบ) เนื่องจากไม่มีค่า x ใดๆ ในตำแหน่ง y ของเมาส์ ที่จะตัดและใกล้เคียงกับสมการพาราโบลา p = (t-1)^2 
ผมจึงเพิ่มโค้ดในบรรทัดที่ 33-36 ให้เช็คว่าหากมีค่า Y น้อยกว่า 0 จะทำให้การ output ออกมาเป็นข้อความว่า "Don't have position" นั่นคือไม่มีตำแหน่งนั่นเอง

2.เมื่อ x และ y น้อยกว่า 1 ใน mode : price
	ในกรณีนี้เมื่อเรารันโค้ดตามปกติจะได้ค่า(t2,p2)ในตำแหน่งที่ค่า y ที่ตัดกับสมการพาราโบลา p = (t-1)^2 โดยที่โปรแกรมจะคำนวณค่ารูทออกมาเป็นบวกเสมอ จึงทำให้ค่าตำแหน่ง(t2,p2)ที่ได้มีค่าไม่ใกล้เคียงจาก x ในตำแหน่ง y หรือจะบอกได้ว่ามีค่าที่ใกล้เคียงกว่านี้
เมื่อ x และ y ที่ input มีค่าน้อยกว่า 1 เพราะรูทสามารถคำนวณออกมาเป็นค่าลบได้ ผมจึงเพิ่มโค้ดในบรรทัดที่ 25-28 ไว้ว่าหาก x และ y มีค่าน้อยกว่า 1 จะทำการคำนวณค่า y ออกมาจากรูทเป็นค่าลบ จะทำให้ได้ตำแหน่ง(t2,p2)ที่ใกล้เคียงกับตำแหน่งของ x ในตำแหน่งของ y มากกว่า

จากที่กล่าวมานี้จึงขอให้โจทย์นั้นมีความชัดเจนมากขึ้นและยกตัวอย่างโจทย์ในกรณีดังกล่าว จะดีมากๆครับ